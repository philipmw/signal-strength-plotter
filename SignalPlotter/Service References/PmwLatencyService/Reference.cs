//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalPlotter.PmwLatencyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatestData", Namespace="http://schemas.datacontract.org/2004/07/LatencyService.Model")]
    [System.SerializableAttribute()]
    public partial struct LatestData : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long emaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> maxLatencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> minLatencyField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ema {
            get {
                return this.emaField;
            }
            set {
                if ((this.emaField.Equals(value) != true)) {
                    this.emaField = value;
                    this.RaisePropertyChanged("ema");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> maxLatency {
            get {
                return this.maxLatencyField;
            }
            set {
                if ((this.maxLatencyField.Equals(value) != true)) {
                    this.maxLatencyField = value;
                    this.RaisePropertyChanged("maxLatency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> minLatency {
            get {
                return this.minLatencyField;
            }
            set {
                if ((this.minLatencyField.Equals(value) != true)) {
                    this.minLatencyField = value;
                    this.RaisePropertyChanged("minLatency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PmwLatencyService.ILatencyServiceContract")]
    public interface ILatencyServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILatencyServiceContract/LatestLatency", ReplyAction="http://tempuri.org/ILatencyServiceContract/LatestLatencyResponse")]
        SignalPlotter.PmwLatencyService.LatestData LatestLatency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILatencyServiceContract/LatestLatency", ReplyAction="http://tempuri.org/ILatencyServiceContract/LatestLatencyResponse")]
        System.Threading.Tasks.Task<SignalPlotter.PmwLatencyService.LatestData> LatestLatencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILatencyServiceContract/Ema", ReplyAction="http://tempuri.org/ILatencyServiceContract/EmaResponse")]
        long Ema();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILatencyServiceContract/Ema", ReplyAction="http://tempuri.org/ILatencyServiceContract/EmaResponse")]
        System.Threading.Tasks.Task<long> EmaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILatencyServiceContractChannel : SignalPlotter.PmwLatencyService.ILatencyServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LatencyServiceContractClient : System.ServiceModel.ClientBase<SignalPlotter.PmwLatencyService.ILatencyServiceContract>, SignalPlotter.PmwLatencyService.ILatencyServiceContract {
        
        public LatencyServiceContractClient() {
        }
        
        public LatencyServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LatencyServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LatencyServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LatencyServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SignalPlotter.PmwLatencyService.LatestData LatestLatency() {
            return base.Channel.LatestLatency();
        }
        
        public System.Threading.Tasks.Task<SignalPlotter.PmwLatencyService.LatestData> LatestLatencyAsync() {
            return base.Channel.LatestLatencyAsync();
        }
        
        public long Ema() {
            return base.Channel.Ema();
        }
        
        public System.Threading.Tasks.Task<long> EmaAsync() {
            return base.Channel.EmaAsync();
        }
    }
}
